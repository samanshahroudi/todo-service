// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// S3Service is an autogenerated mock type for the S3Service type
type S3Service struct {
	mock.Mock
}

// UploadFile provides a mock function with given fields: key, file
func (_m *S3Service) UploadFile(key string, file io.Reader) (string, error) {
	ret := _m.Called(key, file)

	if len(ret) == 0 {
		panic("no return value specified for UploadFile")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string, io.Reader) (string, error)); ok {
		return rf(key, file)
	}
	if rf, ok := ret.Get(0).(func(string, io.Reader) string); ok {
		r0 = rf(key, file)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string, io.Reader) error); ok {
		r1 = rf(key, file)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewS3Service creates a new instance of S3Service. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewS3Service(t interface {
	mock.TestingT
	Cleanup(func())
}) *S3Service {
	mock := &S3Service{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
